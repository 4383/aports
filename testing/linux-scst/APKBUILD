_flavor=scst
pkgname=linux-${_flavor}
pkgver=2.6.34
_kernver=$pkgver
pkgrel=0
pkgdesc="Linux kernel with scst"
url="http://www.kernel.org"
depends="mkinitfs linux-firmware"
makedepends="perl installkernel"
options="!strip"
_config=${config:-kernelconfig.${CARCH:-x86}}
install=
source="ftp://ftp.kernel.org/pub/linux/kernel/v2.6/linux-$pkgver.tar.bz2
        arp.patch
        kernelconfig.x86
        put_page_callback-2.6.34.patch
        scst_exec_req_fifo-2.6.34.patch
        "
# no need to patch now
#ftp://ftp.kernel.org/pub/linux/kernel/v2.6/patch-$pkgver.bz2
subpackages="$pkgname-dev"
license="GPL-2"

_abi_release=${pkgver}-${_flavor}

prepare() {
        cd "$srcdir"/linux-$_kernver
        if [ "$_kernver" != "$pkgver" ]; then
                bunzip2 -c < ../patch-$pkgver.bz2 | patch -p1 -N || return 1
        fi

        for i in ../*.diff ../*.patch; do
                [ -f $i ] || continue
                msg "Applying $i..."
                patch -s -p1 -N < $i || return 1
        done

        mkdir -p "$srcdir"/build
        cp "$srcdir"/$_config "$srcdir"/build/.config
        echo "-${_flavor}" > "$srcdir"/linux-$_kernver/localversion-${_flavor}
        make -C "$srcdir"/linux-$_kernver O="$srcdir"/build HOSTCC="$CC" \
                silentoldconfig
}

# this is so we can do: 'abuild menuconfig' to reconfigure kernel
menuconfig() {
	cd "$srcdir"/build || return 1
        make menuconfig
        cp .config "$startdir"/$_config
}

build() {
        cd "$srcdir"/build
        make CC="$CC" || return 1
}

package() {
        cd "$srcdir"/build
        mkdir -p "$pkgdir"/boot "$pkgdir"/lib/modules
        make modules_install install \
                INSTALL_MOD_PATH="$pkgdir" \
                INSTALL_PATH="$pkgdir"/boot

        rm -f "$pkgdir"/lib/modules/${_abi_release}/build \
                "$pkgdir"/lib/modules/${_abi_release}/source
        rm -rf "$pkgdir"/lib/firmware

        install -D include/config/kernel.release \
                "$pkgdir"/usr/share/kernel/$_flavor/kernel.release
}

dev() {
        # copy the only the parts that we really need for build 3rd party
        # kernel modules and install those as /usr/src/linux-headers,
        # simlar to what ubuntu does
        #
        # this way you dont need to install the 300-400 kernel sources to
        # build a tiny kernel module
        #
        pkgdesc="Headers and script for third party modules for $pkgname kernel"
        local dir="$subpkgdir"/usr/src/linux-headers-${_abi_release}

        # first we import config, run prepare to set up for building
        # external modules, and create the scripts
        mkdir -p "$dir"
        cp "$srcdir"/$_config "$dir"/.config
        make -j1 -C "$srcdir"/linux-$_kernver O="$dir" HOSTCC="$CC" \
                silentoldconfig prepare scripts

        # remove the stuff that poits to real sources. we want 3rd party
        # modules to believe this is the soruces
        rm "$dir"/Makefile "$dir"/source

        # copy the needed stuff from real sources
        #
        # this is taken from ubuntu kernel build script
        # http://kernel.ubuntu.com/git?p=ubuntu/ubuntu-jaunty.git;a=blob;f=debian/rules.d/3-binary-indep.mk;hb=HEAD
        cd "$srcdir"/linux-$_kernver
        find . -path './include/*' -prune -o -path './scripts/*' -prune \
                -o -type f \( -name 'Makefile*' -o -name 'Kconfig*' \
                -o -name 'Kbuild*' -o -name '*.sh' -o -name '*.pl' \
                -o -name '*.lds' \) | cpio -pdm "$dir"
        cp -a drivers/media/dvb/dvb-core/*.h "$dir"/drivers/media/dvb/dvb-core
        cp -a drivers/media/video/*.h "$dir"/drivers/media/video
        cp -a drivers/media/dvb/frontends/*.h "$dir"/drivers/media/dvb/frontends
        cp -a scripts include "$dir"
        find $(find arch -name include -type d -print) -type f \
                | cpio -pdm "$dir"

        install -Dm644 "$srcdir"/build/Module.symvers \
                "$dir"/Module.symvers

        mkdir -p "$subpkgdir"/lib/modules/${_abi_release}
        ln -sf /usr/src/linux-headers-${_abi_release} \
                "$subpkgdir"/lib/modules/${_abi_release}/build
}

md5sums="10eebcb0178fb4540e2165bfd7efc7ad  linux-2.6.34.tar.bz2
4c39a161d918e7f274292ecfd168b891  arp.patch
2a08789db4977397f529a2933bc7b787  kernelconfig.x86
06e9b200ec4fe252dc1478b5f8137e9e  put_page_callback-2.6.34.patch
f9ea26d08807c41407a7758ce53fc633  scst_exec_req_fifo-2.6.34.patch"
