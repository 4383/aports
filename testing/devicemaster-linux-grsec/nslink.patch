diff --git a/nslink.c b/nslink.c
index 16a4212..e64907d 100755
--- a/nslink.c
+++ b/nslink.c
@@ -113,6 +113,7 @@
 #include <linux/slab.h>
 #include <linux/time.h>
 #include <linux/delay.h>
+#include <linux/utsname.h>
 #if LINUX_VERSION_CODE >= VERSION_CODE(2,6,36) && LINUX_VERSION_CODE < VERSION_CODE(2,6,39)
 #include <linux/smp_lock.h>
 #endif
@@ -2864,7 +2865,7 @@ static int nrp_open(struct tty_struct *tty, struct file *filp)
 
         info = nrp_table[line];
 
-        DebugOpen("ttySI%d (count=%d) enter\n", line, info->port.count);
+        DebugOpen("ttySI%d (count=%d) enter\n", line, info->port.count.counter);
 
         if (!info->si) {
                 DebugOpenErr("ttySI%d info->si==NULL: return -ENODEV\n", line);
@@ -2880,9 +2881,9 @@ static int nrp_open(struct tty_struct *tty, struct file *filp)
         ret = tty_port_open(&info->port, tty, filp);
 
         if (ret && ret != -ERESTARTSYS)
-                DebugOpenErr("ttySI%d (count=%d) return %d\n", line, info->port.count,ret);
+                DebugOpenErr("ttySI%d (count=%d) return %d\n", line, info->port.count.counter,ret);
         else
-                DebugOpen("ttySI%d (count=%d) return %d\n", line, info->port.count,ret);
+                DebugOpen("ttySI%d (count=%d) return %d\n", line, info->port.count.counter,ret);
         return ret;
 }
 
@@ -2925,9 +2926,9 @@ static void nrp_port_shutdown(struct tty_port *port)
 static void nrp_close(struct tty_struct *tty, struct file *filp)
 {
         struct nr_port *info = (struct nr_port *) tty->driver_data;
-        DebugOpen("ttySI%d (count=%d) enter\n", info->line, info->port.count);
+        DebugOpen("ttySI%d (count=%d) enter\n", info->line, info->port.count.counter);
         tty_port_close(&info->port, tty, filp);
-        DebugOpen("ttySI%d (count=%d) return\n", info->line, info->port.count);
+        DebugOpen("ttySI%d (count=%d) return\n", info->line, info->port.count.counter);
 }
 
 static void nrp_set_termios(struct tty_struct *tty, struct ktermios *old_termios)
@@ -4786,7 +4787,7 @@ static int free_si_box(int boxid)
                 info = nrp_table[i + si->base_port];
                 if (!info)
                         continue;
-                if (info->port.count) {
+                if (info->port.count.counter) {
                         DebugOpenErr("Attempt to free_si_box() with port open\n");
                         return -EBUSY;
                 }
@@ -5008,7 +5009,7 @@ static int port_proc_show(struct seq_file *m, void *v)
         for (i=0; i<NumElements(nrp_table); ++i) {
                 struct nr_port *info = nrp_table[i];
                 if (info) {
-                        seq_printf(m,"%3d %4d   %02x %6d   ", i, info->port.count, info->rsmode, info->baud_rate);
+                        seq_printf(m,"%3d %4d   %02x %6d   ", i, info->port.count.counter, info->rsmode, info->baud_rate);
 
                         // Ctrl ...
                         seq_printf(m, (info->control_settings & SC_DATABITS_7) ? "7" : "8");
@@ -5192,7 +5193,7 @@ static int status_proc_show(struct seq_file *m, void *v)
         struct si_state *si;
 
         seq_printf(m, "Comtrol NS-Link -- version %s (%s)\n",SI_VERSION,SI_DATE);
-        seq_printf(m, "Built %s  %s\n\n",__DATE__,__TIME__);
+        seq_printf(m, "Build %s\n\n",utsname()->version);
         seq_printf(m, "Hub State        Address            Ports\n");
         seq_printf(m, "--- ------------ ------------------ -----\n");
 
@@ -5381,7 +5382,7 @@ int nrp_init(void)
         static struct proc_dir_entry *procdir;
 
         printk(KERN_INFO "nslink: NS-Link driver, version %s %s\n",SI_VERSION, SI_DATE);
-        printk(KERN_INFO "nslink: Built %s %s\n", __DATE__, __TIME__);
+        printk(KERN_INFO "nslink: Build %s\n", utsname()->version);
 
         // Initialize the array of pointers to our own internal state structures.
         memset(nrp_table, 0, sizeof(nrp_table));
