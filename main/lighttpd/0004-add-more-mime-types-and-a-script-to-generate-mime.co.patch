From 3b23130ea2c1dff470da0970ee8a75c7dafc90fe Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20B=C3=BChler?= <stbuehler@web.de>
Date: Tue, 13 May 2014 10:34:46 +0000
Subject: [PATCH 04/29] add more mime types and a script to generate mime.conf
 (fxies #2579)
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

From: Stefan BÃ¼hler <stbuehler@web.de>

git-svn-id: svn://svn.lighttpd.net/lighttpd/branches/lighttpd-1.4.x@2964 152afb58-edef-0310-8abb-c4023f1b3aa9
---
 NEWS                            |   1 +
 doc/config/conf.d/mime.conf     | 603 +++++++++++++++++++++++++++++++++++-----
 doc/scripts/create-mime.conf.pl | 197 +++++++++++++
 3 files changed, 735 insertions(+), 66 deletions(-)
 create mode 100755 doc/scripts/create-mime.conf.pl

diff --git a/NEWS b/NEWS
index 780f4c6..8c34545 100644
--- a/NEWS
+++ b/NEWS
@@ -6,6 +6,7 @@ NEWS
 - 1.4.36
   * use keep-alive timeout while waiting for HTTP headers; use always the read timeout while waiting for the HTTP body
   * fix bad shift in conditional netmask ".../0" handling
+  * add more mime types and a script to generate mime.conf (fxies #2579)
 
 - 1.4.35 - 2014-03-12
   * [network/ssl] fix build error if TLSEXT is disabled
diff --git a/doc/config/conf.d/mime.conf b/doc/config/conf.d/mime.conf
index 8cfdfe7..f65a02c 100644
--- a/doc/config/conf.d/mime.conf
+++ b/doc/config/conf.d/mime.conf
@@ -1,78 +1,549 @@
+# created by create-mime.conf.pl
+
 #######################################################################
 ##
 ##  MimeType handling
 ## -------------------
 ##
-## http://www.lighttpd.net/documentation/configuration.html#mimetypes
+## https://redmine.lighttpd.net/projects/lighttpd/wiki/Mimetype_assignDetails
+
 ##
-## Use the "Content-Type" extended attribute to obtain mime type if
+## Use the "Content-Type" extended file attribute to obtain mime type if
 ## possible
 ##
-mimetype.use-xattr        = "disable"
+## Disabled by default
+##
+#mimetype.use-xattr = "enable"
 
 ##
-## mimetype mapping
+## mimetype ("Content-Type" HTTP header) mapping for static file handling
 ##
-mimetype.assign             = (
-  ".pdf"          =>      "application/pdf",
-  ".sig"          =>      "application/pgp-signature",
-  ".spl"          =>      "application/futuresplash",
-  ".class"        =>      "application/octet-stream",
-  ".ps"           =>      "application/postscript",
-  ".torrent"      =>      "application/x-bittorrent",
-  ".dvi"          =>      "application/x-dvi",
-  ".gz"           =>      "application/x-gzip",
-  ".pac"          =>      "application/x-ns-proxy-autoconfig",
-  ".swf"          =>      "application/x-shockwave-flash",
-  ".tar.gz"       =>      "application/x-tgz",
-  ".tgz"          =>      "application/x-tgz",
-  ".tar"          =>      "application/x-tar",
-  ".zip"          =>      "application/zip",
-  ".mp3"          =>      "audio/mpeg",
-  ".m3u"          =>      "audio/x-mpegurl",
-  ".wma"          =>      "audio/x-ms-wma",
-  ".wax"          =>      "audio/x-ms-wax",
-  ".ogg"          =>      "application/ogg",
-  ".wav"          =>      "audio/x-wav",
-  ".gif"          =>      "image/gif",
-  ".jpg"          =>      "image/jpeg",
-  ".jpeg"         =>      "image/jpeg",
-  ".png"          =>      "image/png",
-  ".xbm"          =>      "image/x-xbitmap",
-  ".xpm"          =>      "image/x-xpixmap",
-  ".xwd"          =>      "image/x-xwindowdump",
-  ".css"          =>      "text/css",
-  ".html"         =>      "text/html",
-  ".htm"          =>      "text/html",
-  ".js"           =>      "text/javascript",
-  ".asc"          =>      "text/plain",
-  ".c"            =>      "text/plain",
-  ".cpp"          =>      "text/plain",
-  ".log"          =>      "text/plain",
-  ".conf"         =>      "text/plain",
-  ".text"         =>      "text/plain",
-  ".txt"          =>      "text/plain",
-  ".spec"         =>      "text/plain",
-  ".dtd"          =>      "text/xml",
-  ".xml"          =>      "text/xml",
-  ".mpeg"         =>      "video/mpeg",
-  ".mpg"          =>      "video/mpeg",
-  ".mov"          =>      "video/quicktime",
-  ".qt"           =>      "video/quicktime",
-  ".avi"          =>      "video/x-msvideo",
-  ".asf"          =>      "video/x-ms-asf",
-  ".asx"          =>      "video/x-ms-asf",
-  ".wmv"          =>      "video/x-ms-wmv",
-  ".bz2"          =>      "application/x-bzip",
-  ".tbz"          =>      "application/x-bzip-compressed-tar",
-  ".tar.bz2"      =>      "application/x-bzip-compressed-tar",
-  ".rpm"          =>      "application/x-rpm",
-  ".json"         =>      "application/json",
-  # make the default mime type application/octet-stream.
-  ""              =>      "application/octet-stream",
- )
-
-
-#
-#######################################################################
+## The first matching suffix is used. If no mapping is found
+## 'application/octet-stream' is used, and caching (etag/last-modified handling)
+## is disabled to prevent clients from caching "unknown" mime types.
+##
+## Therefore the last mapping is:
+##   "" => "application/octet-stream"
+## This matches all extensions and acts as default mime type, and enables
+## caching for those.
+mimetype.assign = (
+	".tar.bz2" => "application/x-gtar-compressed",
+	".tar.gz" => "application/x-gtar-compressed",
+	".ez" => "application/andrew-inset",
+	".anx" => "application/annodex",
+	".atom" => "application/atom+xml",
+	".atomcat" => "application/atomcat+xml",
+	".atomsrv" => "application/atomserv+xml",
+	".lin" => "application/bbolin",
+	".cu" => "application/cu-seeme",
+	".davmount" => "application/davmount+xml",
+	".dcm" => "application/dicom",
+	".tsp" => "application/dsptype",
+	".es" => "application/ecmascript",
+	".spl" => "application/futuresplash",
+	".hta" => "application/hta",
+	".jar" => "application/java-archive",
+	".ser" => "application/java-serialized-object",
+	".class" => "application/java-vm",
+	".js" => "application/javascript",
+	".json" => "application/json",
+	".m3g" => "application/m3g",
+	".hqx" => "application/mac-binhex40",
+	".cpt" => "application/mac-compactpro",
+	".nb" => "application/mathematica",
+	".nbp" => "application/mathematica",
+	".mbox" => "application/mbox",
+	".mdb" => "application/msaccess",
+	".doc" => "application/msword",
+	".dot" => "application/msword",
+	".mxf" => "application/mxf",
+	".asn" => "application/octet-stream",
+	".bin" => "application/octet-stream",
+	".ent" => "application/octet-stream",
+	".oda" => "application/oda",
+	".ogx" => "application/ogg",
+	".one" => "application/onenote",
+	".onepkg" => "application/onenote",
+	".onetmp" => "application/onenote",
+	".onetoc2" => "application/onenote",
+	".pdf" => "application/pdf",
+	".pgp" => "application/pgp-encrypted",
+	".key" => "application/pgp-keys",
+	".sig" => "application/pgp-signature",
+	".prf" => "application/pics-rules",
+	".ai" => "application/postscript",
+	".eps" => "application/postscript",
+	".eps2" => "application/postscript",
+	".eps3" => "application/postscript",
+	".epsf" => "application/postscript",
+	".epsi" => "application/postscript",
+	".ps" => "application/postscript",
+	".rar" => "application/rar",
+	".rdf" => "application/rdf+xml",
+	".rtf" => "application/rtf",
+	".stl" => "application/sla",
+	".smi" => "application/smil+xml",
+	".smil" => "application/smil+xml",
+	".xht" => "application/xhtml+xml",
+	".xhtml" => "application/xhtml+xml",
+	".xml" => "application/xml",
+	".xsd" => "application/xml",
+	".dtd" => "application/xml-dtd",
+	".xsl" => "application/xslt+xml",
+	".xslt" => "application/xslt+xml",
+	".xspf" => "application/xspf+xml",
+	".zip" => "application/zip",
+	".apk" => "application/vnd.android.package-archive",
+	".cdy" => "application/vnd.cinderella",
+	".kml" => "application/vnd.google-earth.kml+xml",
+	".kmz" => "application/vnd.google-earth.kmz",
+	".xul" => "application/vnd.mozilla.xul+xml",
+	".xlb" => "application/vnd.ms-excel",
+	".xls" => "application/vnd.ms-excel",
+	".xlt" => "application/vnd.ms-excel",
+	".eot" => "application/vnd.ms-fontobject",
+	".thmx" => "application/vnd.ms-officetheme",
+	".cat" => "application/vnd.ms-pki.seccat",
+	".pps" => "application/vnd.ms-powerpoint",
+	".ppt" => "application/vnd.ms-powerpoint",
+	".odc" => "application/vnd.oasis.opendocument.chart",
+	".odb" => "application/vnd.oasis.opendocument.database",
+	".odf" => "application/vnd.oasis.opendocument.formula",
+	".odg" => "application/vnd.oasis.opendocument.graphics",
+	".otg" => "application/vnd.oasis.opendocument.graphics-template",
+	".odi" => "application/vnd.oasis.opendocument.image",
+	".odp" => "application/vnd.oasis.opendocument.presentation",
+	".otp" => "application/vnd.oasis.opendocument.presentation-template",
+	".ods" => "application/vnd.oasis.opendocument.spreadsheet",
+	".ots" => "application/vnd.oasis.opendocument.spreadsheet-template",
+	".odt" => "application/vnd.oasis.opendocument.text",
+	".odm" => "application/vnd.oasis.opendocument.text-master",
+	".ott" => "application/vnd.oasis.opendocument.text-template",
+	".oth" => "application/vnd.oasis.opendocument.text-web",
+	".pptx" => "application/vnd.openxmlformats-officedocument.presentationml.presentation",
+	".sldx" => "application/vnd.openxmlformats-officedocument.presentationml.slide",
+	".ppsx" => "application/vnd.openxmlformats-officedocument.presentationml.slideshow",
+	".potx" => "application/vnd.openxmlformats-officedocument.presentationml.template",
+	".xlsx" => "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
+	".xltx" => "application/vnd.openxmlformats-officedocument.spreadsheetml.template",
+	".docx" => "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
+	".dotx" => "application/vnd.openxmlformats-officedocument.wordprocessingml.template",
+	".cod" => "application/vnd.rim.cod",
+	".mmf" => "application/vnd.smaf",
+	".sdc" => "application/vnd.stardivision.calc",
+	".sds" => "application/vnd.stardivision.chart",
+	".sda" => "application/vnd.stardivision.draw",
+	".sdd" => "application/vnd.stardivision.impress",
+	".sdf" => "application/vnd.stardivision.math",
+	".sdw" => "application/vnd.stardivision.writer",
+	".sgl" => "application/vnd.stardivision.writer-global",
+	".sxc" => "application/vnd.sun.xml.calc",
+	".stc" => "application/vnd.sun.xml.calc.template",
+	".sxd" => "application/vnd.sun.xml.draw",
+	".std" => "application/vnd.sun.xml.draw.template",
+	".sxi" => "application/vnd.sun.xml.impress",
+	".sti" => "application/vnd.sun.xml.impress.template",
+	".sxm" => "application/vnd.sun.xml.math",
+	".sxw" => "application/vnd.sun.xml.writer",
+	".sxg" => "application/vnd.sun.xml.writer.global",
+	".stw" => "application/vnd.sun.xml.writer.template",
+	".sis" => "application/vnd.symbian.install",
+	".cap" => "application/vnd.tcpdump.pcap",
+	".pcap" => "application/vnd.tcpdump.pcap",
+	".vsd" => "application/vnd.visio",
+	".wbxml" => "application/vnd.wap.wbxml",
+	".wmlc" => "application/vnd.wap.wmlc",
+	".wmlsc" => "application/vnd.wap.wmlscriptc",
+	".wpd" => "application/vnd.wordperfect",
+	".wp5" => "application/vnd.wordperfect5.1",
+	".wk" => "application/x-123",
+	".7z" => "application/x-7z-compressed",
+	".abw" => "application/x-abiword",
+	".dmg" => "application/x-apple-diskimage",
+	".bcpio" => "application/x-bcpio",
+	".torrent" => "application/x-bittorrent",
+	".bz2" => "application/x-bzip",
+	".cab" => "application/x-cab",
+	".cbr" => "application/x-cbr",
+	".cbz" => "application/x-cbz",
+	".cda" => "application/x-cdf",
+	".cdf" => "application/x-cdf",
+	".vcd" => "application/x-cdlink",
+	".pgn" => "application/x-chess-pgn",
+	".mph" => "application/x-comsol",
+	".cpio" => "application/x-cpio",
+	".deb" => "application/x-debian-package",
+	".udeb" => "application/x-debian-package",
+	".dcr" => "application/x-director",
+	".dir" => "application/x-director",
+	".dxr" => "application/x-director",
+	".dms" => "application/x-dms",
+	".wad" => "application/x-doom",
+	".dvi" => "application/x-dvi",
+	".woff" => "application/x-font-woff",
+	".mm" => "application/x-freemind",
+	".gan" => "application/x-ganttproject",
+	".gnumeric" => "application/x-gnumeric",
+	".sgf" => "application/x-go-sgf",
+	".gcf" => "application/x-graphing-calculator",
+	".gtar" => "application/x-gtar",
+	".taz" => "application/x-gtar-compressed",
+	".tbz" => "application/x-gtar-compressed",
+	".tgz" => "application/x-gtar-compressed",
+	".gz" => "application/x-gzip",
+	".hdf" => "application/x-hdf",
+	".hwp" => "application/x-hwp",
+	".ica" => "application/x-ica",
+	".info" => "application/x-info",
+	".ins" => "application/x-internet-signup",
+	".isp" => "application/x-internet-signup",
+	".iii" => "application/x-iphone",
+	".iso" => "application/x-iso9660-image",
+	".jam" => "application/x-jam",
+	".jnlp" => "application/x-java-jnlp-file",
+	".jmz" => "application/x-jmol",
+	".chrt" => "application/x-kchart",
+	".kil" => "application/x-killustrator",
+	".skd" => "application/x-koan",
+	".skm" => "application/x-koan",
+	".skp" => "application/x-koan",
+	".skt" => "application/x-koan",
+	".kpr" => "application/x-kpresenter",
+	".kpt" => "application/x-kpresenter",
+	".ksp" => "application/x-kspread",
+	".kwd" => "application/x-kword",
+	".kwt" => "application/x-kword",
+	".latex" => "application/x-latex",
+	".lha" => "application/x-lha",
+	".lyx" => "application/x-lyx",
+	".lzh" => "application/x-lzh",
+	".lzx" => "application/x-lzx",
+	".book" => "application/x-maker",
+	".fb" => "application/x-maker",
+	".fbdoc" => "application/x-maker",
+	".fm" => "application/x-maker",
+	".frame" => "application/x-maker",
+	".frm" => "application/x-maker",
+	".maker" => "application/x-maker",
+	".md5" => "application/x-md5",
+	".mif" => "application/x-mif",
+	".wmd" => "application/x-ms-wmd",
+	".wmz" => "application/x-ms-wmz",
+	".bat" => "application/x-msdos-program",
+	".com" => "application/x-msdos-program",
+	".dll" => "application/x-msdos-program",
+	".exe" => "application/x-msdos-program",
+	".msi" => "application/x-msi",
+	".nc" => "application/x-netcdf",
+	".dat" => "application/x-ns-proxy-autoconfig",
+	".pac" => "application/x-ns-proxy-autoconfig",
+	".nwc" => "application/x-nwc",
+	".o" => "application/x-object",
+	".oza" => "application/x-oz-application",
+	".p7r" => "application/x-pkcs7-certreqresp",
+	".crl" => "application/x-pkcs7-crl",
+	".pyc" => "application/x-python-code",
+	".pyo" => "application/x-python-code",
+	".qgs" => "application/x-qgis",
+	".shp" => "application/x-qgis",
+	".shx" => "application/x-qgis",
+	".qtl" => "application/x-quicktimeplayer",
+	".rdp" => "application/x-rdp",
+	".rpm" => "application/x-redhat-package-manager",
+	".rss" => "application/x-rss+xml",
+	".rb" => "application/x-ruby",
+	".sce" => "application/x-scilab",
+	".sci" => "application/x-scilab",
+	".xcos" => "application/x-scilab-xcos",
+	".sha1" => "application/x-sha1",
+	".shar" => "application/x-shar",
+	".swf" => "application/x-shockwave-flash",
+	".swfl" => "application/x-shockwave-flash",
+	".scr" => "application/x-silverlight",
+	".sql" => "application/x-sql",
+	".sit" => "application/x-stuffit",
+	".sitx" => "application/x-stuffit",
+	".sv4cpio" => "application/x-sv4cpio",
+	".sv4crc" => "application/x-sv4crc",
+	".tar" => "application/x-tar",
+	".gf" => "application/x-tex-gf",
+	".pk" => "application/x-tex-pk",
+	".texi" => "application/x-texinfo",
+	".texinfo" => "application/x-texinfo",
+	".roff" => "application/x-troff",
+	".t" => "application/x-troff",
+	".tr" => "application/x-troff",
+	".man" => "application/x-troff-man",
+	".me" => "application/x-troff-me",
+	".ms" => "application/x-troff-ms",
+	".ustar" => "application/x-ustar",
+	".src" => "application/x-wais-source",
+	".wz" => "application/x-wingz",
+	".crt" => "application/x-x509-ca-cert",
+	".xcf" => "application/x-xcf",
+	".fig" => "application/x-xfig",
+	".xpi" => "application/x-xpinstall",
+	".amr" => "audio/amr",
+	".awb" => "audio/amr-wb",
+	".axa" => "audio/annodex",
+	".au" => "audio/basic",
+	".snd" => "audio/basic",
+	".csd" => "audio/csound",
+	".orc" => "audio/csound",
+	".sco" => "audio/csound",
+	".flac" => "audio/flac",
+	".kar" => "audio/midi",
+	".mid" => "audio/midi",
+	".midi" => "audio/midi",
+	".m4a" => "audio/mpeg",
+	".mp2" => "audio/mpeg",
+	".mp3" => "audio/mpeg",
+	".mpega" => "audio/mpeg",
+	".mpga" => "audio/mpeg",
+	".m3u" => "audio/mpegurl",
+	".oga" => "audio/ogg",
+	".ogg" => "audio/ogg",
+	".opus" => "audio/ogg",
+	".spx" => "audio/ogg",
+	".sid" => "audio/prs.sid",
+	".aif" => "audio/x-aiff",
+	".aifc" => "audio/x-aiff",
+	".aiff" => "audio/x-aiff",
+	".gsm" => "audio/x-gsm",
+	".wax" => "audio/x-ms-wax",
+	".wma" => "audio/x-ms-wma",
+	".ra" => "audio/x-realaudio",
+	".ram" => "audio/x-realaudio",
+	".rm" => "audio/x-realaudio",
+	".pls" => "audio/x-scpls",
+	".sd2" => "audio/x-sd2",
+	".wav" => "audio/x-wav",
+	".alc" => "chemical/x-alchemy",
+	".cac" => "chemical/x-cache",
+	".cache" => "chemical/x-cache",
+	".csf" => "chemical/x-cache-csf",
+	".cascii" => "chemical/x-cactvs-binary",
+	".cbin" => "chemical/x-cactvs-binary",
+	".ctab" => "chemical/x-cactvs-binary",
+	".cdx" => "chemical/x-cdx",
+	".cer" => "chemical/x-cerius",
+	".c3d" => "chemical/x-chem3d",
+	".chm" => "chemical/x-chemdraw",
+	".cif" => "chemical/x-cif",
+	".cmdf" => "chemical/x-cmdf",
+	".cml" => "chemical/x-cml",
+	".cpa" => "chemical/x-compass",
+	".bsd" => "chemical/x-crossfire",
+	".csm" => "chemical/x-csml",
+	".csml" => "chemical/x-csml",
+	".ctx" => "chemical/x-ctx",
+	".cef" => "chemical/x-cxf",
+	".cxf" => "chemical/x-cxf",
+	".emb" => "chemical/x-embl-dl-nucleotide",
+	".embl" => "chemical/x-embl-dl-nucleotide",
+	".spc" => "chemical/x-galactic-spc",
+	".gam" => "chemical/x-gamess-input",
+	".gamin" => "chemical/x-gamess-input",
+	".inp" => "chemical/x-gamess-input",
+	".fch" => "chemical/x-gaussian-checkpoint",
+	".fchk" => "chemical/x-gaussian-checkpoint",
+	".cub" => "chemical/x-gaussian-cube",
+	".gau" => "chemical/x-gaussian-input",
+	".gjc" => "chemical/x-gaussian-input",
+	".gjf" => "chemical/x-gaussian-input",
+	".gal" => "chemical/x-gaussian-log",
+	".gcg" => "chemical/x-gcg8-sequence",
+	".gen" => "chemical/x-genbank",
+	".hin" => "chemical/x-hin",
+	".ist" => "chemical/x-isostar",
+	".istr" => "chemical/x-isostar",
+	".dx" => "chemical/x-jcamp-dx",
+	".jdx" => "chemical/x-jcamp-dx",
+	".kin" => "chemical/x-kinemage",
+	".mcm" => "chemical/x-macmolecule",
+	".mmd" => "chemical/x-macromodel-input",
+	".mmod" => "chemical/x-macromodel-input",
+	".mol" => "chemical/x-mdl-molfile",
+	".rd" => "chemical/x-mdl-rdfile",
+	".rxn" => "chemical/x-mdl-rxnfile",
+	".sd" => "chemical/x-mdl-sdfile",
+	".tgf" => "chemical/x-mdl-tgf",
+	".mcif" => "chemical/x-mmcif",
+	".mol2" => "chemical/x-mol2",
+	".gpt" => "chemical/x-mopac-graph",
+	".mop" => "chemical/x-mopac-input",
+	".mopcrt" => "chemical/x-mopac-input",
+	".mpc" => "chemical/x-mopac-input",
+	".zmt" => "chemical/x-mopac-input",
+	".moo" => "chemical/x-mopac-out",
+	".mvb" => "chemical/x-mopac-vib",
+	".prt" => "chemical/x-ncbi-asn1-ascii",
+	".aso" => "chemical/x-ncbi-asn1-binary",
+	".val" => "chemical/x-ncbi-asn1-binary",
+	".pdb" => "chemical/x-pdb",
+	".ros" => "chemical/x-rosdal",
+	".sw" => "chemical/x-swissprot",
+	".vms" => "chemical/x-vamas-iso14976",
+	".vmd" => "chemical/x-vmd",
+	".xtel" => "chemical/x-xtel",
+	".xyz" => "chemical/x-xyz",
+	".gif" => "image/gif",
+	".ief" => "image/ief",
+	".jp2" => "image/jp2",
+	".jpg2" => "image/jp2",
+	".jpe" => "image/jpeg",
+	".jpeg" => "image/jpeg",
+	".jpg" => "image/jpeg",
+	".jpm" => "image/jpm",
+	".jpf" => "image/jpx",
+	".jpx" => "image/jpx",
+	".pcx" => "image/pcx",
+	".png" => "image/png",
+	".svg" => "image/svg+xml",
+	".svgz" => "image/svg+xml",
+	".tif" => "image/tiff",
+	".tiff" => "image/tiff",
+	".djv" => "image/vnd.djvu",
+	".djvu" => "image/vnd.djvu",
+	".ico" => "image/vnd.microsoft.icon",
+	".wbmp" => "image/vnd.wap.wbmp",
+	".cr2" => "image/x-canon-cr2",
+	".crw" => "image/x-canon-crw",
+	".ras" => "image/x-cmu-raster",
+	".cdr" => "image/x-coreldraw",
+	".pat" => "image/x-coreldrawpattern",
+	".cdt" => "image/x-coreldrawtemplate",
+	".erf" => "image/x-epson-erf",
+	".art" => "image/x-jg",
+	".jng" => "image/x-jng",
+	".bmp" => "image/x-ms-bmp",
+	".nef" => "image/x-nikon-nef",
+	".orf" => "image/x-olympus-orf",
+	".psd" => "image/x-photoshop",
+	".pnm" => "image/x-portable-anymap",
+	".pbm" => "image/x-portable-bitmap",
+	".pgm" => "image/x-portable-graymap",
+	".ppm" => "image/x-portable-pixmap",
+	".rgb" => "image/x-rgb",
+	".xbm" => "image/x-xbitmap",
+	".xpm" => "image/x-xpixmap",
+	".xwd" => "image/x-xwindowdump",
+	".eml" => "message/rfc822",
+	".iges" => "model/iges",
+	".igs" => "model/iges",
+	".mesh" => "model/mesh",
+	".msh" => "model/mesh",
+	".silo" => "model/mesh",
+	".vrml" => "model/vrml",
+	".wrl" => "model/vrml",
+	".x3db" => "model/x3d+binary",
+	".x3dv" => "model/x3d+vrml",
+	".x3d" => "model/x3d+xml",
+	".appcache" => "text/cache-manifest",
+	".ics" => "text/calendar",
+	".icz" => "text/calendar",
+	".css" => "text/css; charset=utf-8",
+	".csv" => "text/csv; charset=utf-8",
+	".323" => "text/h323",
+	".htm" => "text/html",
+	".html" => "text/html",
+	".shtml" => "text/html",
+	".uls" => "text/iuls",
+	".mml" => "text/mathml",
+	".asc" => "text/plain; charset=utf-8",
+	".brf" => "text/plain; charset=utf-8",
+	".conf" => "text/plain; charset=utf-8",
+	".log" => "text/plain; charset=utf-8",
+	".pot" => "text/plain; charset=utf-8",
+	".spec" => "text/plain; charset=utf-8",
+	".srt" => "text/plain; charset=utf-8",
+	".text" => "text/plain; charset=utf-8",
+	".txt" => "text/plain; charset=utf-8",
+	".rtx" => "text/richtext",
+	".sct" => "text/scriptlet",
+	".wsc" => "text/scriptlet",
+	".tsv" => "text/tab-separated-values",
+	".tm" => "text/texmacs",
+	".ttl" => "text/turtle",
+	".jad" => "text/vnd.sun.j2me.app-descriptor",
+	".wml" => "text/vnd.wap.wml",
+	".wmls" => "text/vnd.wap.wmlscript",
+	".bib" => "text/x-bibtex; charset=utf-8",
+	".boo" => "text/x-boo; charset=utf-8",
+	".h++" => "text/x-c++hdr; charset=utf-8",
+	".hh" => "text/x-c++hdr; charset=utf-8",
+	".hpp" => "text/x-c++hdr; charset=utf-8",
+	".hxx" => "text/x-c++hdr; charset=utf-8",
+	".c++" => "text/x-c++src; charset=utf-8",
+	".cc" => "text/x-c++src; charset=utf-8",
+	".cpp" => "text/x-c++src; charset=utf-8",
+	".cxx" => "text/x-c++src; charset=utf-8",
+	".h" => "text/x-chdr; charset=utf-8",
+	".htc" => "text/x-component",
+	".csh" => "text/x-csh; charset=utf-8",
+	".c" => "text/x-csrc; charset=utf-8",
+	".diff" => "text/x-diff; charset=utf-8",
+	".patch" => "text/x-diff; charset=utf-8",
+	".d" => "text/x-dsrc; charset=utf-8",
+	".hs" => "text/x-haskell; charset=utf-8",
+	".java" => "text/x-java; charset=utf-8",
+	".ly" => "text/x-lilypond; charset=utf-8",
+	".lhs" => "text/x-literate-haskell; charset=utf-8",
+	".moc" => "text/x-moc; charset=utf-8",
+	".p" => "text/x-pascal; charset=utf-8",
+	".pas" => "text/x-pascal; charset=utf-8",
+	".gcd" => "text/x-pcs-gcd",
+	".pl" => "text/x-perl; charset=utf-8",
+	".pm" => "text/x-perl; charset=utf-8",
+	".py" => "text/x-python; charset=utf-8",
+	".scala" => "text/x-scala; charset=utf-8",
+	".etx" => "text/x-setext",
+	".sfv" => "text/x-sfv",
+	".sh" => "text/x-sh; charset=utf-8",
+	".tcl" => "text/x-tcl; charset=utf-8",
+	".tk" => "text/x-tcl; charset=utf-8",
+	".cls" => "text/x-tex; charset=utf-8",
+	".ltx" => "text/x-tex; charset=utf-8",
+	".sty" => "text/x-tex; charset=utf-8",
+	".tex" => "text/x-tex; charset=utf-8",
+	".vcs" => "text/x-vcalendar",
+	".vcf" => "text/x-vcard",
+	".3gp" => "video/3gpp",
+	".axv" => "video/annodex",
+	".dl" => "video/dl",
+	".dif" => "video/dv",
+	".dv" => "video/dv",
+	".fli" => "video/fli",
+	".gl" => "video/gl",
+	".mp4" => "video/mp4",
+	".mpe" => "video/mpeg",
+	".mpeg" => "video/mpeg",
+	".mpg" => "video/mpeg",
+	".ogv" => "video/ogg",
+	".mov" => "video/quicktime",
+	".qt" => "video/quicktime",
+	".webm" => "video/webm",
+	".mxu" => "video/vnd.mpegurl",
+	".flv" => "video/x-flv",
+	".lsf" => "video/x-la-asf",
+	".lsx" => "video/x-la-asf",
+	".mkv" => "video/x-matroska",
+	".mpv" => "video/x-matroska",
+	".mng" => "video/x-mng",
+	".asf" => "video/x-ms-asf",
+	".asx" => "video/x-ms-asf",
+	".wm" => "video/x-ms-wm",
+	".wmv" => "video/x-ms-wmv",
+	".wmx" => "video/x-ms-wmx",
+	".wvx" => "video/x-ms-wvx",
+	".avi" => "video/x-msvideo",
+	".movie" => "video/x-sgi-movie",
+	".ice" => "x-conference/x-cooltalk",
+	".sisx" => "x-epoc/x-sisx-app",
+	".vrm" => "x-world/x-vrml",
+	"README" => "text/plain; charset=utf-8",
+	"Makefile" => "text/x-makefile; charset=utf-8",
 
+	# enable caching for unknown mime types:
+	"" => "application/octet-stream"
+)
diff --git a/doc/scripts/create-mime.conf.pl b/doc/scripts/create-mime.conf.pl
new file mode 100755
index 0000000..7c9e378
--- /dev/null
+++ b/doc/scripts/create-mime.conf.pl
@@ -0,0 +1,197 @@
+#!/usr/bin/perl -w
+
+# Based on create-mime.assign.pl in debian lighttpd (1.4.x) package
+# Creates an example mime.conf from /etc/mime.types
+
+use strict;
+
+# text/* subtypes to serve as "text/...; charset=utf-8"
+# text/html IS NOT INCLUDED: html has its own method for defining charset
+#   (<meta>), but the standards specify that content-type in HTTP wins over
+#   the setting in the html document.
+my %text_utf8 = map { $_ => 1 } qw(
+	css
+	csv
+	plain
+	x-bibtex
+	x-boo
+	x-c++hdr
+	x-c++src
+	x-chdr
+	x-csh
+	x-csrc
+	x-dsrc
+	x-diff
+	x-haskell
+	x-java
+	x-lilypond
+	x-literate-haskell
+	x-makefile
+	x-moc
+	x-pascal
+	x-perl
+	x-python
+	x-scala
+	x-sh
+	x-tcl
+	x-tex
+);
+
+# map extension to hash which maps types to the type they should be replaced with
+my %manual_conflicts_resolve = (
+	'.ra' => {
+		'audio/x-pn-realaudio' => 'audio/x-realaudio',
+	},
+);
+
+open MIMETYPES, "/etc/mime.types" or die "Can't open /etc/mime.types: $!";
+
+my %extensions;
+sub set {
+	my ($extension, $mimetype) = @_;
+	$extensions{$extension} = $mimetype;
+}
+sub add {
+	my ($extension, $mimetype) = @_;
+	my $have = $extensions{$extension};
+
+	my $r = $manual_conflicts_resolve{$extension};
+	# update @_ too for calls to set
+	$_[1] = $mimetype = $r->{$mimetype} if $r && $r->{$mimetype};
+
+	# mime.types can have same extension for different mime types
+	if ($have) {
+		# application/octet-stream means we couldn't resolve another conflict
+		return if $have eq $mimetype || $have eq 'application/octet-stream';
+
+		my ($have_type, $have_subtype) = split /\//, $have, 2;
+		my ($type, $subtype) = split /\//, $mimetype, 2;
+
+		my $have_x = ($have_type =~ /^x-/ || $have_subtype =~ /^x-/);
+		my $x = ($type =~ /^x-/ || $subtype =~ /^x-/);
+
+		# entries without x- prefix in type/subtype win:
+		if ($have_x && !$x) {
+			return set @_; # overwrite
+		} elsif ($x && !$have_x) {
+			return; # ignore
+		}
+
+		# text/ wins over application/ for same subtype
+		if ($subtype eq $have_subtype) {
+			if ($type eq "text" && $have_type eq "application") {
+				return set @_; # overwrite
+			} elsif ($have_type eq "text" && $type eq "application") {
+				return; # ignore
+			}
+		}
+
+		print STDERR "Duplicate mimetype: '${extension}' => '${mimetype}' (already have '${have}'), merging to 'application/octet-stream'\n";
+		set ($extension, 'application/octet-stream');
+	} else {
+		set @_;
+	}
+}
+
+sub print_type {
+	my ($extension, $mimetype) = @_;
+	if ($mimetype =~ /^text\/(.*)$/) {
+		$mimetype .= "; charset=utf-8" if $text_utf8{$1};
+	}
+
+	print "\t\"${extension}\" => \"${mimetype}\",\n";
+}
+
+while (<MIMETYPES>) {
+	chomp;
+	s/\#.*//;
+	next if /^\w*$/;
+	if (/^([a-z0-9\/+-.]+)\s+((?:[a-z0-9.+-]+[ ]?)+)$/) {
+		my $mimetype = $1;
+		my @extensions = split / /, $2;
+
+		foreach my $ext (@extensions) {
+			add(".${ext}", $mimetype);
+		}
+	}
+}
+
+# missing in /etc/mime.types;
+# from http://www.iana.org/assignments/media-types/media-types.xhtml
+add(".dtd", "application/xml-dtd");
+
+# other useful mappings
+my %useful = (
+	".tar.gz"  => "application/x-gtar-compressed",
+	".gz"      => "application/x-gzip",
+	".tbz"     => "application/x-gtar-compressed",
+	".tar.bz2" => "application/x-gtar-compressed",
+	".bz2"     => "application/x-bzip",
+	".log"     => "text/plain",
+	".conf"    => "text/plain",
+	".spec"    => "text/plain",
+	"README"   => "text/plain",
+	"Makefile" => "text/x-makefile",
+);
+
+while (my ($ext, $mimetype) = each %useful) {
+	add($ext, $mimetype) unless $extensions{$ext};
+}
+
+
+print <<EOF;
+# created by create-mime.conf.pl
+
+#######################################################################
+##
+##  MimeType handling
+## -------------------
+##
+## https://redmine.lighttpd.net/projects/lighttpd/wiki/Mimetype_assignDetails
+
+##
+## Use the "Content-Type" extended file attribute to obtain mime type if
+## possible
+##
+## Disabled by default
+##
+#mimetype.use-xattr = "enable"
+
+##
+## mimetype ("Content-Type" HTTP header) mapping for static file handling
+##
+## The first matching suffix is used. If no mapping is found
+## 'application/octet-stream' is used, and caching (etag/last-modified handling)
+## is disabled to prevent clients from caching "unknown" mime types.
+##
+## Therefore the last mapping is:
+##   "" => "application/octet-stream"
+## This matches all extensions and acts as default mime type, and enables
+## caching for those.
+mimetype.assign = (
+EOF
+
+# sort "x-" and "vnd." prefixed names after everything else
+sub mimecmpvalue {
+	my ($mimetype) = @_;
+	$mimetype =~ s/(^|\/)(x-|vnd\.)/~$1$2/g;
+	return $mimetype;
+}
+sub countdots {
+	my ($s) = @_;
+	return scalar(() = $s =~ /\./g);
+}
+# the first matching suffix wins, so we have to sort by "length"
+# as all extensions start with "." we use the number of "."s as length
+# the exceptions are "README" and "Makefile" which are assumed not to conflict
+#  (i.e. are not a suffix of any other extension)
+for my $ext (sort { countdots($b) <=> countdots($a) || mimecmpvalue($extensions{$a}) cmp mimecmpvalue($extensions{$b}) || $a cmp $b } keys(%extensions)) {
+	print_type($ext, $extensions{$ext});
+}
+
+print <<EOF;
+
+	# enable caching for unknown mime types:
+	"" => "application/octet-stream"
+)
+EOF
-- 
2.4.5

