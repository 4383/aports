From cc8cc8f32c863f3ae6a8a88e97b47bcd6a21825f Mon Sep 17 00:00:00 2001
From: Karel Zak <kzak@redhat.com>
Date: Mon, 26 Nov 2012 15:25:46 +0000
Subject: umount: sanitize paths from non-root users

Signed-off-by: Karel Zak <kzak@redhat.com>
---
diff --git a/sys-utils/umount.c b/sys-utils/umount.c
index 06d33de..396052c 100644
--- a/sys-utils/umount.c
+++ b/sys-utils/umount.c
@@ -38,6 +38,7 @@
 #include "strutils.h"
 #include "xgetpass.h"
 #include "exitcodes.h"
+#include "canonicalize.h"
 
 /*** TODO: DOCS:
  *
@@ -401,6 +402,24 @@ static int umount_recursive(struct libmnt_context *cxt, const char *spec)
 	return rc;
 }
 
+/*
+ * Check path -- non-root user should not be able to resolve path which is
+ * unreadable for him.
+ */
+static char *sanitize_path(const char *path)
+{
+	char *p;
+
+	if (!path)
+		return NULL;
+
+	p = canonicalize_path_restricted(path);
+	if (!p)
+		err(MOUNT_EX_USAGE, "%s", path);
+
+	return p;
+}
+
 int main(int argc, char **argv)
 {
 	int c, rc = 0, all = 0, recursive = 0;
@@ -388,9 +407,19 @@ int main(int argc, char **argv)
 	} else if (argc < 1) {
 		usage(stderr);
 
-	} else while (argc--)
-		rc += umount_one(cxt, *argv++);
+	} else {
+	       while (argc--) {
+		       char *path = *argv++;
 
+		       if (mnt_context_is_restricted(cxt))
+			       path = sanitize_path(path);
+
+		       rc += umount_one(cxt, path);
+
+		       if (mnt_context_is_restricted(cxt))
+			       free(path);
+	       }
+	}
 	mnt_free_context(cxt);
 	return rc;
 }
--
cgit v0.9.1
