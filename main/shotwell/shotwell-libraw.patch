diff --git a/src/photos/GRaw.vala b/src/photos/GRaw.vala
index cb32289..c2463a2 100644
--- a/src/photos/GRaw.vala
+++ b/src/photos/GRaw.vala
@@ -34,11 +34,11 @@ public errordomain Exception {
     OUT_OF_ORDER_CALL,
     NO_THUMBNAIL,
     UNSUPPORTED_THUMBNAIL,
-    CANNOT_ADDMASK,
     OUT_OF_MEMORY,
     DATA_ERROR,
     IO_ERROR,
     CANCELLED_BY_CALLBACK,
+    BAD_CROP,
     SYSTEM_ERROR
 }
 
@@ -163,10 +163,6 @@ public class Processor {
         proc = new LibRaw.Processor(options);
     }
     
-    public void add_masked_borders_to_bitmap() {
-        proc.add_masked_borders_to_bitmap();
-    }
-    
     public void adjust_sizes_info_only() throws Exception {
         throw_exception("adjust_sizes_info_only", proc.adjust_sizes_info_only());
     }
@@ -215,10 +211,6 @@ public class Processor {
         throw_exception("ppm_tiff_writer", proc.ppm_tiff_writer(filename));
     }
     
-    public void rotate_fuji_raw() throws Exception {
-        throw_exception("rotate_fuji_raw", proc.rotate_fuji_raw());
-    }
-    
     public void thumb_writer(string filename) throws Exception {
         throw_exception("thumb_writer", proc.thumb_writer(filename));
     }
@@ -262,7 +254,6 @@ public class Processor {
         // camera_profile
         // bad_pixels
         // dark_frame
-        output_params->filtering_mode = LibRaw.Filtering.AUTOMATIC;
         output_params->output_bps = 8;
         // output_tiff
         output_params->user_flip = GRaw.Flip.FROM_SOURCE;
@@ -303,9 +294,6 @@ private void throw_exception(string caller, LibRaw.Result result) throws Excepti
         case LibRaw.Result.UNSUPPORTED_THUMBNAIL:
             throw new Exception.UNSUPPORTED_THUMBNAIL(msg);
         
-        case LibRaw.Result.CANNOT_ADDMASK:
-            throw new Exception.CANNOT_ADDMASK(msg);
-        
         case LibRaw.Result.UNSUFFICIENT_MEMORY:
             throw new Exception.OUT_OF_MEMORY(msg);
         
@@ -318,6 +306,9 @@ private void throw_exception(string caller, LibRaw.Result result) throws Excepti
         case LibRaw.Result.CANCELLED_BY_CALLBACK:
             throw new Exception.CANCELLED_BY_CALLBACK(msg);
         
+        case LibRaw.Result.BAD_CROP:
+            throw new Exception.BAD_CROP(msg);
+        
         default:
             return;
     }
diff --git a/vapi/libraw.vapi b/vapi/libraw.vapi
index 55f35cf..a7af4af 100644
--- a/vapi/libraw.vapi
+++ b/vapi/libraw.vapi
@@ -14,17 +14,6 @@ public unowned string version();
 
 public unowned string versionNumber();
 
-[CCode (cname="enum libraw_Filtering", cprefix="LIBRAW_FILTERING_")]
-public enum Filtering {
-    DEFAULT,
-    NOZEROES,
-    NOBLACK,
-    NORAWCURVE,
-    NONE,
-    LIBRAWOWN,
-    AUTOMATIC
-}
-
 [SimpleType]
 [CCode (cname="libraw_imgother_t")]
 public struct ImageOther {
@@ -121,7 +110,6 @@ public struct OutputParams {
     public bool use_camera_wb;
     public bool use_camera_matrix;
     public int output_color;
-    public Filtering filtering_mode;
     public int output_bps;
     public bool output_tiff;
     public int user_flip;
@@ -132,6 +120,30 @@ public struct OutputParams {
     public bool no_auto_bright;
     public float auto_bright_thr;
     public int use_fuji_rotate;
+    public int green_matching;
+
+    /* DCB parameters */
+    public int dcb_iterations;
+    public int dcb_enhance_fl;
+    public int fbdd_noiserd;
+
+    /* VCD parameters */
+    public int eeci_refine;
+    public int es_med_passes;
+    /* AMaZE*/
+    public int ca_correc;
+    public float cared;
+    public float cablue;
+    public int cfaline;
+    public float linenoise;
+    public int cfa_clean;
+    public float lclean;
+    public float cclean;
+    public int cfa_green;
+    public float green_thresh;
+    public int exp_correc;
+    public float exp_shift;
+    public float exp_preser;
     
     public void set_chromatic_aberrations(double red_multiplier, double green_multiplier) {
         aber[0] = red_multiplier;
@@ -171,7 +183,6 @@ public class Processor {
     [CCode (cname="libraw_init")]
     public Processor(Options flags = Options.NONE);
     
-    public void add_masked_borders_to_bitmap();
     public Result adjust_sizes_info_only();
     [CCode (cname="libraw_dcraw_document_mode_processing")]
     public Result document_mode_processing();
@@ -216,11 +227,11 @@ public enum Result {
     OUT_OF_ORDER_CALL,
     NO_THUMBNAIL,
     UNSUPPORTED_THUMBNAIL,
-    CANNOT_ADDMASK,
     UNSUFFICIENT_MEMORY,
     DATA_ERROR,
     IO_ERROR,
-    CANCELLED_BY_CALLBACK;
+    CANCELLED_BY_CALLBACK,
+    BAD_CROP;
     
     [CCode (cname="LIBRAW_FATAL_ERROR")]
     public bool is_fatal_error();
