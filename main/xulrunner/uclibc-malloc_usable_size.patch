--- mozilla-release-old/memory/mozalloc/Makefile.in
+++ mozilla-release/memory/mozalloc/Makefile.in
@@ -43,6 +43,10 @@
 
 include $(DEPTH)/config/autoconf.mk
 
+ifdef MOZ_MEMORY
+SHARED_LIBRARY_LIBS = $(call EXPAND_LIBNAME_PATH,jemalloc,../jemalloc) $(call EXPAND_LIBNAME_PATH,memory,../build)
+endif
+
 VISIBILITY_FLAGS=
 STL_FLAGS	=
 ifdef _MSC_VER
--- ./memory/mozalloc/mozalloc.cpp.orig
+++ ./memory/mozalloc/mozalloc.cpp
@@ -33,7 +33,7 @@
 #include "mozilla/mozalloc_oom.h"  // for mozalloc_handle_oom
 
 /* Windows doesn't have malloc_usable_size, but jemalloc has */
-#if defined(MOZ_MEMORY_WINDOWS)
+#if defined(MOZ_MEMORY_WINDOWS) || defined(__UCLIBC__)
 extern "C" size_t malloc_usable_size(const void *ptr);
 #endif
 
@@ -213,10 +213,10 @@
 
 #if defined(XP_MACOSX)
     return malloc_size(ptr);
-#elif defined(MOZ_MEMORY) || (defined(XP_LINUX) && !defined(ANDROID)) || defined(__FreeBSD__)
+#elif defined(MOZ_MEMORY) || (defined(XP_LINUX) && !defined(ANDROID)) && !defined(__UCLIBC__) || defined(__FreeBSD__)
     // Android bionic libc doesn't have malloc_usable_size.
     return malloc_usable_size(ptr);
-#elif defined(XP_WIN)
+#elif defined(XP_WIN) || defined(__UCLIBC__)
     return _msize(ptr);
 #else
     return 0;
