# Maintainer: Natanael Copa <ncopa@alpinelinux.org>
pkgname=apk-tools
pkgver=2.4.0
pkgrel=5
pkgdesc="Alpine Package Keeper - package manager for alpine"
subpackages="$pkgname-static"
depends=
makedepends_build=""
makedepends_host="zlib-dev openssl-dev"
makedepends="$makedepends_build $makedepends_host"
if [ "$CBUILD" == "$CHOST" ]; then
	subpackages="$subpackages lua5.2-apk:luaapk"
	makedepends="$makedepends lua5.2-dev"
fi
source="http://dev.alpinelinux.org/archive/$pkgname/$pkgname-$pkgver.tar.xz
	0001-db-allow-using-cached-packages-with-no-network.patch
	0002-print-use-stdout-instead-of-stderr-for-logging-and-p.patch
	0003-print-flush-on-apk_log.patch
	"

url="http://git.alpinelinux.org/cgit/apk-tools/"
arch="all"
license=GPL-2

_builddir="$srcdir/$pkgname-$pkgver"
prepare() {
	cd "$_builddir"
	sed -i -e 's:-Werror::' Make.rules
	for i in $source; do
		case $i in
		*.patch) msg "$i"; patch -p1 -i "$srcdir"/$i || return 1
		esac
	done

	echo "FULL_VERSION=$pkgver-r$pkgrel" > config.mk || return 1
	if [ "$CBUILD" = "$CHOST" ]; then
		echo "LUAAPK=YesPlease" >> config.mk
	else
		echo "LUAAPK=" >> config.mk
	fi
	echo "export LUAAPK" >> config.mk
}

build() {
	cd "$_builddir"
	make || return 1
	make static || return 1
}

package() {
	cd "$_builddir"
	make DESTDIR="$pkgdir" install
	install -d "$pkgdir"/var/lib/apk \
		"$pkgdir"/var/cache/misc \
		"$pkgdir"/etc/apk/keys \
		"$pkgdir"/etc/apk/protected_paths.d \
		|| return 1
	# the shipped README is empty
	rm -r "$pkgdir"/usr/share/
}

static() {
	pkgdesc="Alpine Package Keeper - static binary"
	install -Dm755 "$srcdir"/$pkgname-$pkgver/src/apk.static \
		"$subpkgdir"/sbin/apk.static

	# lets sign the static binary so it can be vefified from distros
	# that does not have apk-tools
	local abuild_conf=${ABUILD_CONF:-"/etc/abuild.conf"}
	local abuild_home=${ABUILD_USERDIR:-"$HOME/.abuild"}
	local abuild_userconf=${ABUILD_USERCONF:-"$abuild_home/abuild.conf"}
	[ -f "$abuild_userconf" ] && . "$abuild_userconf"
	local privkey="$PACKAGER_PRIVKEY"
	local pubkey=${PACKAGER_PUBKEY:-"${privkey}.pub"}
	local keyname=${pubkey##*/}
	${CROSS_COMPILE}strip "$subpkgdir"/sbin/apk.static
	openssl dgst -sha1 -sign "$privkey" \
		-out "$subpkgdir"/sbin/apk.static.SIGN.RSA.$keyname \
		"$subpkgdir"/sbin/apk.static || return 1
}

luaapk() {
	pkgdesc="Lua module for apk-tools"
	mkdir -p "$subpkgdir"/usr/
	mv "$pkgdir"/usr/lib "$subpkgdir"/usr/lib/
}

md5sums="8446c69882d26c8bba38500b6e5577eb  apk-tools-2.4.0.tar.xz
1dd6a336016814ef44805f1974961d6b  0001-db-allow-using-cached-packages-with-no-network.patch
a4d39e02bb7e8cee4c4daf69d684e691  0002-print-use-stdout-instead-of-stderr-for-logging-and-p.patch
bfc313d60890b25b4eea7f7a8284d815  0003-print-flush-on-apk_log.patch"
sha256sums="ac717df2c512c43e6ea3dd103fcea725ee9135936fe6a177de5021c36735a578  apk-tools-2.4.0.tar.xz
92bf5e0d28933a907ddb74b343d322db484be4f909ccb33ac0ec9f320c323fde  0001-db-allow-using-cached-packages-with-no-network.patch
886ea0b40511c694ef9689bd74e8f861c69d5648c774cad80c622c39a979468e  0002-print-use-stdout-instead-of-stderr-for-logging-and-p.patch
83cf87712f77d6db296c1775e5cf4b1fb458b732830dc23d9ea46065ccba1260  0003-print-flush-on-apk_log.patch"
sha512sums="97dae73ed34e56349be5027d73720bdb8cf136b6bf0ede6f9fd5199386977d6c718f3593ea0f566aef0c5cdaf59e078f22a4bb1a22132b00dae82dc5927a8279  apk-tools-2.4.0.tar.xz
305c669fd98534e8438af656c6be5aa30b23253fa21cf155bc230a7b87f0b85c221f353717c25f2ef84072c34ebcc99ecca54e9cac31139a8f3a636c3bbb5981  0001-db-allow-using-cached-packages-with-no-network.patch
7f0c9107ff1ba3ab3a5443d53ccb98b47cab3f1b8467457d2c333ece8f92d17c684bfbf9e8db51f91ff759d1ba334708c0190ba0fdeaef85dd922138e2317271  0002-print-use-stdout-instead-of-stderr-for-logging-and-p.patch
d2ffae4736671db9fa6a60fa04d495d3d31c9998ad099a2f23c0920f0827571fa5ac85ba6522afe16a1d7eba072e25a390fa15d07e7339d0adeb7840af117399  0003-print-flush-on-apk_log.patch"
