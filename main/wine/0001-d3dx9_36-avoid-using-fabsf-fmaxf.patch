From b630b7aa0a086affabfb9533b5c64ef8505768dd Mon Sep 17 00:00:00 2001
From: Natanael Copa <ncopa@alpinelinux.org>
Date: Wed, 28 Sep 2011 06:03:59 +0000
Subject: [PATCH] d3dx9_36: avoid using fabsf/fmaxf
Reply-To: wine-devel <wine-devel@winehq.org>

This fixes compiling on Alpine Linux and other uClibc based distros.

This is related bug 28247 and commit 4cddd5ffdf0c568445365c6c62e7788d7dbbca7d
---
 dlls/d3dx9_36/tests/mesh.c |   14 +++++++-------
 1 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/dlls/d3dx9_36/tests/mesh.c b/dlls/d3dx9_36/tests/mesh.c
index 6a78e64..c09607f 100644
--- a/dlls/d3dx9_36/tests/mesh.c
+++ b/dlls/d3dx9_36/tests/mesh.c
@@ -6160,7 +6160,7 @@ static void check_vertex_components(int line, int mesh_number, int vertex_number
             {
                 FLOAT *got = (FLOAT*)(got_ptr + decl_ptr->Offset);
                 FLOAT *exp = (FLOAT*)(exp_ptr + decl_ptr->Offset);
-                FLOAT diff = fabsf(*got - *exp);
+                FLOAT diff = abs(*got - *exp);
                 ok_(__FILE__,line)(diff <= FLT_EPSILON, "Mesh %d: Got %f for vertex %d %s, expected %f.\n",
                     mesh_number, *got, vertex_number, usage_strings[decl_ptr->Usage], *exp);
                 break;
@@ -6169,7 +6169,7 @@ static void check_vertex_components(int line, int mesh_number, int vertex_number
             {
                 D3DXVECTOR2 *got = (D3DXVECTOR2*)(got_ptr + decl_ptr->Offset);
                 D3DXVECTOR2 *exp = (D3DXVECTOR2*)(exp_ptr + decl_ptr->Offset);
-                FLOAT diff = fmaxf(fabsf(got->x - exp->x), fabsf(got->y - exp->y));
+                FLOAT diff = max(abs(got->x - exp->x), abs(got->y - exp->y));
                 ok_(__FILE__,line)(diff <= FLT_EPSILON, "Mesh %d: Got (%f, %f) for vertex %d %s, expected (%f, %f).\n",
                     mesh_number, got->x, got->y, vertex_number, usage_strings[decl_ptr->Usage], exp->x, exp->y);
                 break;
@@ -6178,8 +6178,8 @@ static void check_vertex_components(int line, int mesh_number, int vertex_number
             {
                 D3DXVECTOR3 *got = (D3DXVECTOR3*)(got_ptr + decl_ptr->Offset);
                 D3DXVECTOR3 *exp = (D3DXVECTOR3*)(exp_ptr + decl_ptr->Offset);
-                FLOAT diff = fmaxf(fabsf(got->x - exp->x), fabsf(got->y - exp->y));
-                diff = fmaxf(diff, fabsf(got->z - exp->z));
+                FLOAT diff = max(abs(got->x - exp->x), abs(got->y - exp->y));
+                diff = max(diff, abs(got->z - exp->z));
                 ok_(__FILE__,line)(diff <= FLT_EPSILON, "Mesh %d: Got (%f, %f, %f) for vertex %d %s, expected (%f, %f, %f).\n",
                     mesh_number, got->x, got->y, got->z, vertex_number, usage_strings[decl_ptr->Usage], exp->x, exp->y, exp->z);
                 break;
@@ -6188,9 +6188,9 @@ static void check_vertex_components(int line, int mesh_number, int vertex_number
             {
                 D3DXVECTOR4 *got = (D3DXVECTOR4*)(got_ptr + decl_ptr->Offset);
                 D3DXVECTOR4 *exp = (D3DXVECTOR4*)(exp_ptr + decl_ptr->Offset);
-                FLOAT diff = fmaxf(fabsf(got->x - exp->x), fabsf(got->y - exp->y));
-                diff = fmaxf(diff, fabsf(got->z - exp->z));
-                diff = fmaxf(diff, fabsf(got->w - exp->w));
+                FLOAT diff = max(abs(got->x - exp->x), abs(got->y - exp->y));
+                diff = max(diff, abs(got->z - exp->z));
+                diff = max(diff, abs(got->w - exp->w));
                 ok_(__FILE__,line)(diff <= FLT_EPSILON, "Mesh %d: Got (%f, %f, %f, %f) for vertex %d %s, expected (%f, %f, %f, %f).\n",
                     mesh_number, got->x, got->y, got->z, got->w, vertex_number, usage_strings[decl_ptr->Usage], exp->x, exp->y, exp->z, got->w);
                 break;
-- 
1.7.6.1

