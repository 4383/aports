From 5032d06bb9bcae916d60e157d1d1110d270d06cb Mon Sep 17 00:00:00 2001
From: Albert Astals Cid <aacid@kde.org>
Date: Thu, 24 Oct 2013 00:54:56 +0200
Subject: [PATCH] Allow only one %d in the filename

Fixes crashes if you had %s and similar in the filename

Inspired from patch by Pedro Ribeiro <pedrib@gmail.com>

Bug #69434

Conflicts:

	utils/pdfseparate.cc
---
 utils/pdfseparate.cc |   31 ++++++++++++++++++++++++++++++-
 1 file changed, 30 insertions(+), 1 deletion(-)

diff --git a/utils/pdfseparate.cc b/utils/pdfseparate.cc
index c8b5df6..e993964 100644
--- a/utils/pdfseparate.cc
+++ b/utils/pdfseparate.cc
@@ -18,6 +18,7 @@
 #include "PDFDoc.h"
 #include "ErrorCodes.h"
 #include "GlobalParams.h"
+#include <ctype.h>
 
 static int firstPage = 0;
 static int lastPage = 0;
@@ -65,9 +66,37 @@ bool extractPages (const char *srcFileName, const char *destFileName) {
   if (firstPage == 0)
     firstPage = 1;
   if (firstPage != lastPage && strstr(destFileName, "%d") == NULL) {
-    error(-1, "'%s' must contain '%%d' if more than one page should be extracted", destFileName);
+    error(-1, "'{0:s}' must contain '%d' if more than one page should be extracted", destFileName);
     return false;
   }
+  
+  // destFileName can have multiple %% and one %d
+  // We use auxDestFileName to replace all the valid % appearances
+  // by 'A' (random char that is not %), if at the end of replacing
+  // any of the valid appearances there is still any % around, the
+  // pattern is wrong
+  char *auxDestFileName = strdup(destFileName);
+  // %% can appear as many times as you want
+  char *p = strstr(auxDestFileName, "%%");
+  while (p != NULL) {
+    *p = 'A';
+    *(p + 1) = 'A';
+    p = strstr(p, "%%"); 
+  }
+  // %d can appear only one time
+  p = strstr(auxDestFileName, "%d");
+  if (p != NULL) {
+    *p = 'A';
+  }
+  // at this point any other % is wrong
+  p = strstr(auxDestFileName, "%");
+  if (p != NULL) {
+    error(-1, "'{0:s}' can only contain one '%d' pattern", destFileName);
+    free(auxDestFileName);
+    return false;
+  }
+  free(auxDestFileName);
+  
   for (int pageNo = firstPage; pageNo <= lastPage; pageNo++) {
     snprintf (pathName, sizeof (pathName) - 1, destFileName, pageNo);
     GooString *gpageName = new GooString (pathName);
-- 
1.7.10

