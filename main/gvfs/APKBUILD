# Contributor: Natanael Copa <ncopa@alpinelinux.org>
# Maintainer: Natanael Copa <ncopa@alpinelinux.org>
pkgname=gvfs
pkgver=1.22.2
pkgrel=1
pkgdesc="Backends for the gio framework in GLib"
url="http://ftp.gnome.org/pub/gnome/sources/gvfs/${pkgver%.*}/"
arch="all"
license="GPL"
depends=
triggers="$pkgname.trigger=/usr/lib/gvfs"
makedepends="intltool fuse-dev udev-dev bluez-dev expat-dev samba-dev
	libsoup-dev avahi-dev libarchive-dev udisks2-dev libgphoto2-dev
	libcdio-paranoia-dev libgcrypt-dev libxslt-dev docbook-xsl"
install=
subpackages="$pkgname-dev $pkgname-doc $pkgname-lang
	$pkgname-afp
	$pkgname-archive
	$pkgname-avahi
	$pkgname-cdda
	$pkgname-dav
	$pkgname-fuse
	$pkgname-gphoto2
	$pkgname-obexftp
	$pkgname-smb
	"
source="http://ftp.gnome.org/pub/gnome/sources/gvfs/${pkgver%.*}/gvfs-$pkgver.tar.xz"

_builddir="$srcdir"/$pkgname-$pkgver
prepare() {
	cd "$_builddir"
	for i in $source; do
		case $i in
		*.patch) patch -p1 -i "$srcdir"/$i || return 1
		esac
	done
}

build() {
	cd "$_builddir"
	./configure \
		--build=$CBUILD \
		--host=$CHOST \
		--prefix=/usr \
		--sysconfdir=/etc \
		--libexecdir=/usr/lib/gvfs \
		--mandir=/usr/share/man \
		--infodir=/usr/share/info \
		--enable-gdu \
		--enable-http \
		|| return 1
	make || return 1
}

package() {
	cd "$_builddir"
	make DESTDIR="$pkgdir" install
	rm -f "$pkgdir"/usr/lib/*.la \
		"$pkgdir"/usr/lib/gvfs/*.la \
		"$pkgdir"/usr/lib/gio/modules/*.la
}

_mv_files() {
	local i
	for i in "$@"; do
		mkdir -p "$subpkgdir"/${i%/*}
		mv "$pkgdir"/$i "$subpkgdir"/$i || return 1
	done
}

fuse() {
	pkgdesc="FUSE support for gvfs"
	cd "$pkgdir"
	_mv_files usr/lib/gvfs/gvfsd-fuse
}

smb() {
	pkgdesc="Windows fileshare support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/lib/gvfs/gvfsd-smb* \
		usr/share/gvfs/mounts/smb* \
		usr/share/glib-*/schemas/org.gnome.system.smb.gschema.xml \
		usr/share/GConf/gsettings/gvfs-smb.convert
}

archive() {
	pkgdesc="Archiving support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/lib/gvfs/gvfsd-archive* \
		usr/share/gvfs/mounts/archive*
}

obexftp() {
	pkgdesc="ObexFTP support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/lib/gvfs/gvfsd-obex* \
		usr/share/gvfs/mounts/obex*
}

gphoto2() {
	pkgdesc="gphoto2 support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/lib/gvfs/gvfs*gphoto* \
		usr/share/gvfs/*/gphoto* \
		usr/share/dbus*/services/*GPhoto*
}

afp() {
	pkgdesc="AFP support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/lib/gvfs/gvfs*afp* \
		usr/share/gvfs/*/afp*
}

avahi() {
	pkgdesc="DNS-SD support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/lib/gvfs/gvfs*dns* \
		usr/share/gvfs/mounts/dns-sd.mount \
		usr/share/glib-*/schemas/org.gnome.system.dns_sd.gschema.xml \
		usr/share/GConf/gsettings/gvfs-dns-sd.convert
}

cdda() {
	pkgdesc="CDDA support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/share/gvfs/mounts/cdda.mount \
		usr/lib/gvfs/gvfsd-cdda
}

dav() {
	pkgdesc="WebDAV support for gvfs"
	cd "$pkgdir"
	_mv_files \
		usr/share/gvfs/mounts/dav.mount \
		usr/share/gvfs/mounts/dav+sd.mount \
		usr/lib/gvfs/gvfsd-dav
}

#
#afc() {
#	pkgdesc="AFC support for gvfs"
#}

md5sums="6b00ec682a6851bcdad7814dd799e228  gvfs-1.22.2.tar.xz"
sha256sums="8d08c4927b6c20d990498c23280017e7033b31a386f09b4c3ce5bedd20316250  gvfs-1.22.2.tar.xz"
sha512sums="aed00c84f5ee58ce8427f943b6097f7371d00ce36ec858a43b361b5b49161d0f0102d66edd8482416d5121eef43ad298ff55b5a3810bbb45a576e06ff004521f  gvfs-1.22.2.tar.xz"
