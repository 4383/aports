diff --git a/eel/eel-editable-label.c b/eel/eel-editable-label.c
index b21bfea..63a3ccf 100644
--- a/eel/eel-editable-label.c
+++ b/eel/eel-editable-label.c
@@ -682,7 +682,7 @@ eel_editable_label_set_text (EelEditableLabel *label,
  * Return value: the text in the label widget. This is the internal
  *   string used by the label, and must not be modified.
  **/
-G_CONST_RETURN gchar *
+const gchar *
 eel_editable_label_get_text (EelEditableLabel *label)
 {
   g_return_val_if_fail (EEL_IS_EDITABLE_LABEL (label), NULL);
@@ -4292,7 +4292,7 @@ eel_editable_label_accessible_initialize (AtkObject *accessible,
   atk_object_set_role (accessible, ATK_ROLE_TEXT);
 }
 
-static G_CONST_RETURN gchar*
+static const gchar*
 eel_editable_label_accessible_get_name (AtkObject *accessible)
 {
   if (accessible->name != NULL)
diff --git a/eel/eel-editable-label.h b/eel/eel-editable-label.h
index 30069dc..b0adaec 100644
--- a/eel/eel-editable-label.h
+++ b/eel/eel-editable-label.h
@@ -112,7 +112,7 @@ GType                 eel_editable_label_get_type          (void) G_GNUC_CONST;
 GtkWidget*            eel_editable_label_new                  (const char       *str);
 void                  eel_editable_label_set_text             (EelEditableLabel *label,
 							       const char       *str);
-G_CONST_RETURN gchar* eel_editable_label_get_text             (EelEditableLabel *label);
+const gchar* eel_editable_label_get_text             (EelEditableLabel *label);
 void                  eel_editable_label_set_justify          (EelEditableLabel *label,
 							       GtkJustification  jtype);
 GtkJustification      eel_editable_label_get_justify          (EelEditableLabel *label);
diff --git a/eel/eel-i18n.c b/eel/eel-i18n.c
index 83f9fec..98e36c5 100644
--- a/eel/eel-i18n.c
+++ b/eel/eel-i18n.c
@@ -32,7 +32,7 @@
 
 
 
-G_CONST_RETURN char *
+const char *
 _eel_gettext (const char *str)
 {
 	static gboolean _eel_gettext_initialized = FALSE;
diff --git a/eel/eel-i18n.h b/eel/eel-i18n.h
index b455689..6db832b 100644
--- a/eel/eel-i18n.h
+++ b/eel/eel-i18n.h
@@ -28,7 +28,7 @@
 #ifdef ENABLE_NLS
 #include <glib.h>
 
-G_CONST_RETURN char *
+const char *
 _eel_gettext (const char *str) G_GNUC_FORMAT (1);
 
 #include <libintl.h>
diff --git a/eel/eel-labeled-image.c b/eel/eel-labeled-image.c
index 90df383..a56e952 100644
--- a/eel/eel-labeled-image.c
+++ b/eel/eel-labeled-image.c
@@ -2140,7 +2140,7 @@ get_image (gpointer object)
 	return EEL_LABELED_IMAGE (widget);
 }
 
-static G_CONST_RETURN gchar *
+static const gchar *
 eel_labeled_image_accessible_get_name (AtkObject *accessible)
 {
 	EelLabeledImage *labeled_image;
diff --git a/libnautilus-private/nautilus-icon-canvas-item.c b/libnautilus-private/nautilus-icon-canvas-item.c
index a31623a..1aece5a 100644
--- a/libnautilus-private/nautilus-icon-canvas-item.c
+++ b/libnautilus-private/nautilus-icon-canvas-item.c
@@ -2878,7 +2878,7 @@ nautilus_icon_canvas_item_accessible_action_interface_init (AtkActionIface *ifac
 	iface->set_description = nautilus_icon_canvas_item_accessible_action_set_description;
 }
 
-static G_CONST_RETURN gchar *
+static const gchar *
 nautilus_icon_canvas_item_accessible_get_name (AtkObject *accessible)
 {
 	NautilusIconCanvasItem *item;
@@ -2894,7 +2894,7 @@ nautilus_icon_canvas_item_accessible_get_name (AtkObject *accessible)
 	return item->details->editable_text;
 }
 
-static G_CONST_RETURN gchar*
+static const gchar*
 nautilus_icon_canvas_item_accessible_get_description (AtkObject *accessible)
 {
 	NautilusIconCanvasItem *item;
@@ -3055,7 +3055,7 @@ nautilus_icon_canvas_item_accessible_class_init (AtkObjectClass *klass)
 }
 
 
-static G_CONST_RETURN gchar * 
+static const gchar * 
 nautilus_icon_canvas_item_accessible_get_image_description
 	(AtkImage *image)
 {
diff --git a/libnautilus-private/nautilus-icon-info.c b/libnautilus-private/nautilus-icon-info.c
index f39ad42..af023ba 100644
--- a/libnautilus-private/nautilus-icon-info.c
+++ b/libnautilus-private/nautilus-icon-info.c
@@ -573,13 +573,13 @@ nautilus_icon_info_get_attach_points (NautilusIconInfo  *icon,
 	return icon->n_attach_points != 0;
 }
 
-G_CONST_RETURN char *
+const char *
 nautilus_icon_info_get_display_name   (NautilusIconInfo  *icon)
 {
 	return icon->display_name;
 }
 
-G_CONST_RETURN char *
+const char *
 nautilus_icon_info_get_used_name (NautilusIconInfo  *icon)
 {
 	return icon->icon_name;
diff --git a/libnautilus-private/nautilus-icon-info.h b/libnautilus-private/nautilus-icon-info.h
index 5ef6cd2..861abfd 100644
--- a/libnautilus-private/nautilus-icon-info.h
+++ b/libnautilus-private/nautilus-icon-info.h
@@ -72,8 +72,8 @@ gboolean              nautilus_icon_info_get_embedded_rect            (NautilusI
 gboolean              nautilus_icon_info_get_attach_points            (NautilusIconInfo  *icon,
 								       GdkPoint         **points,
 								       gint              *n_points);
-G_CONST_RETURN char  *nautilus_icon_info_get_display_name             (NautilusIconInfo  *icon);
-G_CONST_RETURN char  *nautilus_icon_info_get_used_name                (NautilusIconInfo  *icon);
+const char  *nautilus_icon_info_get_display_name             (NautilusIconInfo  *icon);
+const char  *nautilus_icon_info_get_used_name                (NautilusIconInfo  *icon);
 
 void                  nautilus_icon_info_clear_caches                 (void);
 
diff --git a/libnautilus-private/nautilus-search-engine-beagle.c b/libnautilus-private/nautilus-search-engine-beagle.c
index 930923f..1129d6c 100644
--- a/libnautilus-private/nautilus-search-engine-beagle.c
+++ b/libnautilus-private/nautilus-search-engine-beagle.c
@@ -69,7 +69,7 @@ typedef enum {
 static gboolean (*beagle_client_send_request_async) (BeagleClient  *client,
                                                     BeagleRequest  *request,
                                                     GError        **err) = NULL;
-static G_CONST_RETURN char *(*beagle_hit_get_uri) (BeagleHit *hit) = NULL;
+static const char *(*beagle_hit_get_uri) (BeagleHit *hit) = NULL;
 static GSList *(*beagle_hits_added_response_get_hits) (BeagleHitsAddedResponse *response) = NULL;
 static BeagleQuery *(*beagle_query_new) (void) = NULL;
 static void (*beagle_query_add_text) (BeagleQuery     *query,
diff --git a/src/nautilus-zoom-control.c b/src/nautilus-zoom-control.c
index 2907cd7..2d399c3 100644
--- a/src/nautilus-zoom-control.c
+++ b/src/nautilus-zoom-control.c
@@ -748,7 +748,7 @@ nautilus_zoom_control_accessible_get_n_actions (AtkAction *accessible)
 	return NUM_ACTIONS;
 }
 
-static G_CONST_RETURN char *
+static const char *
 nautilus_zoom_control_accessible_action_get_description (AtkAction *accessible, 
 							 int i)
 {
@@ -757,7 +757,7 @@ nautilus_zoom_control_accessible_action_get_description (AtkAction *accessible,
 	return _(nautilus_zoom_control_accessible_action_descriptions[i]);
 }
 
-static G_CONST_RETURN char *
+static const char *
 nautilus_zoom_control_accessible_action_get_name (AtkAction *accessible, 
 						  int i)
 {
@@ -884,13 +884,13 @@ nautilus_zoom_control_accessible_value_interface_init (AtkValueIface *iface)
 	iface->set_current_value = nautilus_zoom_control_accessible_set_current_value;
 }
 
-static G_CONST_RETURN char *
+static const char *
 nautilus_zoom_control_accessible_get_name (AtkObject *accessible)
 {
 	return _("Zoom");
 }
 
-static G_CONST_RETURN char *
+static const char *
 nautilus_zoom_control_accessible_get_description (AtkObject *accessible)
 {
 	return _("Set the zoom level of the current view");
