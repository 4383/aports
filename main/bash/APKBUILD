# Maintainer: Natanael Copa <ncopa@alpinelinux.org>

pkgname=bash
pkgver=4.1.005
_patchlevel=${pkgver##*.}
_myver=${pkgver%.*}
_patchbase=${_myver%.*}${_myver#*.}
pkgrel=1
pkgdesc="The GNU Bourne Again shell"
license='GPL'
url="http://www.gnu.org/software/bash/bash.html"
makedepends="readline-dev ncurses-dev bison flex"
depends=
subpackages="$pkgname-doc"
source="http://ftp.gnu.org/gnu/bash/bash-${_myver}.tar.gz
	bash-noinfo.patch
	"
# generate url's to patches. note: no forks allowed!
_i=1
_pad="00"
while [ $_i -le $_patchlevel ]; do
	[ $_i -ge 10 ] && _pad="0"
	[ $_i -ge 100 ] && _pad=
	source="$source http://ftp.gnu.org/gnu/bash/bash-$_myver-patches/bash$_patchbase-$_pad$_i"
	_i=$(( $_i + 1))
done

# run 'abuild _gensrc >> APKBUILD' to generate the patch list
#_gensrc() {
#	for _i in $(seq 1 $_patchlevel); do
#		# seq -w unsupported by busybox
#		_p=$(printf "%0.3i" $_i)
#		echo -e "\thttp://ftp.gnu.org/gnu/bash/bash-${_myver}-patches/bash${_patchbase}-$_p"
#	done
#}

_builddir="$srcdir"/$pkgname-$_myver
prepare() {
	local p
	cd "$_builddir"
	for p in ../bash${_patchbase}-??? ../*.patch; do
		msg "applying patch ${p##*/}"
		patch -p0 -i $p || return 1
	done
}

build() {
	cd "$_builddir"
	./configure --prefix=/usr \
		--with-curses \
		--disable-nls \
		--enable-readline \
		--without-bash-malloc \
		--with-installed-readline \
		--bindir=/bin \
		--mandir=/usr/share/man \
		--infodir=/usr/share/info
	make || return 1
}

package() {
	cd ${startdir}/src/${pkgname}-${_myver}
	make DESTDIR=${pkgdir} install

	rm -rf "$pkgdir"/usr/share/locale
}
md5sums="9800d8724815fd84994d9be65ab5e7b8  bash-4.1.tar.gz
80fec5f3d60a63756a4999c877e31a8e  bash-noinfo.patch
582dea5671b557f783e18629c2f77b68  bash41-001
118d465095d4a4706eb1d34696a2666a  bash41-002
120f7cf039a40d35fe375e59d6f17adc  bash41-003
336ee037fc2cc1e2350b05097fbdc87c  bash41-004
9471e666797f0b03eb2175ed752a9550  bash41-005"
