diff --git a/libbb/correct_password.c b/libbb/correct_password.c
index 7cabd33..37d3346 100644
--- a/libbb/correct_password.c
+++ b/libbb/correct_password.c
@@ -52,7 +52,7 @@ int FAST_FUNC correct_password(const struct passwd *pw)
 	/* Using _r function to avoid pulling in static buffers */
 	if ((correct[0] == 'x' || correct[0] == '*') && !correct[1]) {
 		struct spwd spw;
-		char buffer[256];
+		char buffer[1024];
 		/* getspnam_r may return 0 yet set result to NULL.
 		 * At least glibc 2.4 does this. Be extra paranoid here. */
 		struct spwd *result = NULL;
diff --git a/libpwdgrp/pwd_grp.c b/libpwdgrp/pwd_grp.c
index 2060d78..d78ceb0 100644
--- a/libpwdgrp/pwd_grp.c
+++ b/libpwdgrp/pwd_grp.c
@@ -23,8 +23,8 @@
 /**********************************************************************/
 /* Sizes for statically allocated buffers. */
 
-#define PWD_BUFFER_SIZE 256
-#define GRP_BUFFER_SIZE 256
+#define PWD_BUFFER_SIZE 1024
+#define GRP_BUFFER_SIZE 1024
 
 /**********************************************************************/
 /* Prototypes for internal functions. */
diff --git a/loginutils/passwd.c b/loginutils/passwd.c
index a7006f0..bec04bd 100644
--- a/loginutils/passwd.c
+++ b/loginutils/passwd.c
@@ -107,7 +107,7 @@ int passwd_main(int argc UNUSED_PARAM, char **argv)
 #if ENABLE_FEATURE_SHADOWPASSWDS
 	/* Using _r function to avoid pulling in static buffers */
 	struct spwd spw;
-	char buffer[256];
+	char buffer[1024];
 #endif
 
 	logmode = LOGMODE_BOTH;
diff --git a/loginutils/sulogin.c b/loginutils/sulogin.c
index bd2b09e..c0caf3e 100644
--- a/loginutils/sulogin.c
+++ b/loginutils/sulogin.c
@@ -29,7 +29,7 @@ int sulogin_main(int argc UNUSED_PARAM, char **argv)
 	const char *shell;
 #if ENABLE_FEATURE_SHADOWPASSWDS
 	/* Using _r function to avoid pulling in static buffers */
-	char buffer[256];
+	char buffer[1024];
 	struct spwd spw;
 #endif
 
diff --git a/networking/httpd.c b/networking/httpd.c
index 1934bb2..83fbd24 100644
--- a/networking/httpd.c
+++ b/networking/httpd.c
@@ -1771,7 +1771,7 @@ static int check_user_passwd(const char *path, char *user_and_passwd)
 			char *colon_after_user;
 			const char *passwd;
 # if ENABLE_FEATURE_SHADOWPASSWDS && !ENABLE_PAM
-			char sp_buf[256];
+			char sp_buf[1024];
 # endif
 
 			colon_after_user = strchr(user_and_passwd, ':');
