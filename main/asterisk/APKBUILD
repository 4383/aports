# Contributor: Timo Teras <timo.teras@iki.fi>
# Maintainer: Timo Teras <timo.teras@iki.fi>
pkgname=asterisk
pkgver=1.8.1.1
pkgrel=0
pkgdesc="Asterisk: A Module Open Source PBX System"
url="http://www.asterisk.org/"
arch="all"
license="GPL"
depends=
makedepends="autoconf automake libtool ncurses-dev popt-dev newt-dev zlib-dev
	postgresql-dev unixodbc-dev dahdi-tools-dev libpri-dev tar
	freetds-dev openssl-dev lua-dev alsa-lib-dev spandsp-dev tiff-dev
	libresample sqlite-dev wget speex-dev"
install="$pkgname.pre-install $pkgname.pre-upgrade $pkgname.post-install"
subpackages="$pkgname-dev $pkgname-doc $pkgname-pgsql $pkgname-odbc
	$pkgname-tds $pkgname-fax $pkgname-sample-config:sample $pkgname-sqlite
	$pkgname-sounds-moh:sound_moh $pkgname-sounds-en:sound_en"
source="http://downloads.digium.com/pub/asterisk/releases/$pkgname-$pkgver.tar.gz
	100-uclibc-daemon.patch
	101-caps-uclibc.patch
	400-bug-227.patch
	asterisk.initd
	asterisk.confd
	asterisk.logrotate"

_builddir="$srcdir/$pkgname-$pkgver"

prepare() {
	cd "$_builddir"
	for i in ../[1-9]*.patch; do
		msg "Apply $i"
		patch -p1 < $i || return 1
	done

	sed -i -e 's:lua5.1/::' pbx/pbx_lua.c
	sed -i -e 's/PBX_ICONV=1/PBX_ICONV=0/g' configure.ac

	./bootstrap.sh
}

build() {
	cd "$_builddir"
	SHA1SUM="$PWD"/build_tools/sha1sum-sh ./configure --prefix=/usr \
		--sysconfdir=/etc \
		--mandir=/usr/share/man \
		--infodir=/usr/share/info \
		--libdir=/usr/lib \
		--localstatedir=/var \
		--disable-xmldoc --with-gsm=internal \
		--without-iconv --with-popt --with-z --with-newt \
		--with-odbc --with-postgres --with-tds \
		--with-dahdi --with-pri --with-tonezone \
		--with-resample \
		--with-sqlite3 \
		--with-speex \
		--with-asound \
		--without-x11 \
		--with-spandsp \
		|| return 1

	# and figure out which modules to build
	rm menuselect.makeopts
	make menuselect.makeopts
	make ASTLDFLAGS="$LDFLAGS" || return 1
}

package() {
	cd "$_builddir"
	make -j1 DESTDIR="$pkgdir" install

	install -d "$pkgdir"/var/run/asterisk
	install -m755 -D "$srcdir"/$pkgname.initd "$pkgdir"/etc/init.d/$pkgname
	install -m644 -D "$srcdir"/$pkgname.confd "$pkgdir"/etc/conf.d/$pkgname
	install -m644 -D "$srcdir"/$pkgname.logrotate \
		"$pkgdir"/etc/logrotate.d/$pkgname
}

_move_dir() {
	for DIR in "$@"; do
		local dest=`dirname "$subpkgdir/$DIR"`
		echo mkdir -p $dest
		mkdir -p "$dest"
		echo mv "$pkgdir"/$DIR $dest
		mv "$pkgdir"/"$DIR" "$dest"
	done
}

_find_and_move() {
	local pattern="$1"
	cd "$pkgdir" || return 1
	find -name "$pattern" -type f | while read f; do
		local dest="$subpkgdir/${f%/*}"
		mkdir -p "$dest"
		mv "$f" "$dest"
	done
}

doc() {
	default_doc
}

dev() {
	default_dev
	depends="asterisk"
}

pgsql() {
	depends=
	install=
	_find_and_move '*_pgsql*'
}

sqlite() {
	depends=
	install=
	_find_and_move '*_sqlite*'
}

odbc() {
	depends=
	install=
	_find_and_move '*odbc*'
}

tds() {
	depends=
	install=
	_find_and_move '*_tds*'
}

fax() {
        depends=
        install=
        _find_and_move '*_fax*'
}

sample() {
	pkgdesc="Sample configuration files for asterisk"
	cd "$_builddir"
	mkdir -p "$subpkgdir"/var/lib/asterisk/phoneprov
	make -j1 samples DESTDIR="$subpkgdir"
}

sound_moh() {
	pkgdesc="Default on-hold music files for asterisk"
	depends=
	install=
	_move_dir var/lib/asterisk/moh
}

sound_en() {
	pkgdesc="English sound files for asterisk"
	depends=
	install=
	_move_dir var/lib/asterisk/sounds/en
}

md5sums="489440fe1172af8c06323f470d600670  asterisk-1.8.1.1.tar.gz
b00c9d98ce2ad445501248a197c6e436  100-uclibc-daemon.patch
6e1129e30c4fd2c25c86c81685a485a9  101-caps-uclibc.patch
79e9634b5054bceb3b8dc246654bb243  400-bug-227.patch
0ce3219e05f55af884a7dc6b99c2b276  asterisk.initd
ed31d7ba37bcf8b0346dcf8593c395f0  asterisk.confd
3e65172275684373e1a25c8a11224411  asterisk.logrotate"
